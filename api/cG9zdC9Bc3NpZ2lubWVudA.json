{"title":"高频交易数据分析","date":"2020-07-06T14:55:22.000Z","slug":"Assiginment","updated":"2020-07-06T14:55:42.659Z","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd </span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"comment\">#读数</span></span><br><span class=\"line\">MD20140519 = pd.read_csv(<span class=\"string\">'MD_20140519.csv'</span>)</span><br><span class=\"line\">MD20140520 = pd.read_csv(<span class=\"string\">'MD_20140520.csv'</span>)</span><br><span class=\"line\">MD20140521 = pd.read_csv(<span class=\"string\">'MD_20140521.csv'</span>)</span><br><span class=\"line\">MD20140522 = pd.read_csv(<span class=\"string\">'MD_20140522.csv'</span>)</span><br><span class=\"line\">MD20140523 = pd.read_csv(<span class=\"string\">'MD_20140523.csv'</span>)</span><br><span class=\"line\"><span class=\"comment\">#切片</span></span><br><span class=\"line\">md19 = np.array(MD20140519.loc[<span class=\"number\">0</span>:<span class=\"number\">9</span>])</span><br><span class=\"line\">md20 = np.array(MD20140520.loc[<span class=\"number\">0</span>:<span class=\"number\">9</span>])</span><br><span class=\"line\">md21 = np.array(MD20140521.loc[<span class=\"number\">0</span>:<span class=\"number\">9</span>])</span><br><span class=\"line\">md22 = np.array(MD20140522.loc[<span class=\"number\">0</span>:<span class=\"number\">9</span>])</span><br><span class=\"line\">md23 = np.array(MD20140523.loc[<span class=\"number\">0</span>:<span class=\"number\">9</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">MD = np.array([md19,md20,md21,md22,md23])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#打印每天的前十个合约</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">5</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">9</span>):</span><br><span class=\"line\">        print(MD[[i],[j],[<span class=\"number\">3</span>]])</span><br><span class=\"line\">    print(<span class=\"string\">'aggregated LastVol'</span>,np.sum(MD[[i],:,<span class=\"number\">9</span>]))</span><br><span class=\"line\">    print(<span class=\"string\">'day'</span>,i+<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#时间戳转换时间格式函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">timestampToStrtime</span><span class=\"params\">(timestamp)</span>:</span></span><br><span class=\"line\">    local_strtime = datetime.fromtimestamp(timestamp / <span class=\"number\">10000000</span>).time()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> local_strtime</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">timestampToStrtimeDay</span><span class=\"params\">(timestamp)</span>:</span></span><br><span class=\"line\">    local_strtime = datetime.fromtimestamp(timestamp / <span class=\"number\">10000000</span>).strftime(<span class=\"string\">\"%Y-%m-%d %H:%M:%S.%f\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> local_strtime</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> datetime</span><br><span class=\"line\">start_time = datetime.datetime.strptime(<span class=\"string\">'09:00:00'</span>,<span class=\"string\">'%H:%M:%S'</span>).time()</span><br><span class=\"line\">end_time = datetime.datetime.strptime(<span class=\"string\">'11:30:00'</span>,<span class=\"string\">'%H:%M:%S'</span>).time()</span><br><span class=\"line\">start_time1 = datetime.datetime.strptime(<span class=\"string\">'13:30:00'</span>,<span class=\"string\">'%H:%M:%S'</span>).time()</span><br><span class=\"line\">end_time1 = datetime.datetime.strptime(<span class=\"string\">'15:00:00'</span>,<span class=\"string\">'%H:%M:%S'</span>).time()</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">remarkRecvTime</span><span class=\"params\">(row)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (row&gt;= start_time <span class=\"keyword\">and</span>  row&lt; end_time):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> (row&gt;= start_time1 <span class=\"keyword\">and</span> row &lt; end_time1):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># def secondofday(time):</span></span><br><span class=\"line\"><span class=\"comment\">#     t = time.split(':')</span></span><br><span class=\"line\"><span class=\"comment\">#     return int(t[0]) * 3600 + int(t[1]) * 60 + int(t[2])</span></span><br><span class=\"line\">    </span><br><span class=\"line\">md20140519 = pd.DataFrame(MD20140519)</span><br><span class=\"line\">md20140520 = pd.DataFrame(MD20140520)</span><br><span class=\"line\">md20140521 = pd.DataFrame(MD20140521)</span><br><span class=\"line\">md20140522 = pd.DataFrame(MD20140522)</span><br><span class=\"line\">md20140523 = pd.DataFrame(MD20140523)</span><br><span class=\"line\"></span><br><span class=\"line\">md = pd.concat([md20140519,md20140520,md20140521,md20140522,md20140523])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\">md[<span class=\"string\">'RecvTime'</span>] = md[<span class=\"string\">'RecvTime'</span>].astype(np.int64)</span><br><span class=\"line\">md[<span class=\"string\">'RecvTime'</span>] = md[<span class=\"string\">'RecvTime'</span>] - <span class=\"number\">621259200000000000</span></span><br><span class=\"line\">md[<span class=\"string\">'date_phase'</span>] = md[<span class=\"string\">'RecvTime'</span>].apply(timestampToStrtimeDay)</span><br><span class=\"line\">md[<span class=\"string\">'RecvTime'</span>] = md[<span class=\"string\">'RecvTime'</span>].apply(timestampToStrtime)</span><br><span class=\"line\">md[<span class=\"string\">'datetimephase'</span>] = md.RecvTime.apply(remarkRecvTime)</span><br><span class=\"line\">md_1 = md[md.datetimephase&gt;<span class=\"number\">0</span>]</span><br><span class=\"line\">print(md_1)</span><br></pre></td></tr></table></figure>\n<pre><code>[121406.]\n[121407.]\n[121408.]\n[121409.]\n[121410.]\n[121411.]\n[121412.]\n[121501.]\n[121502.]\naggregated LastVol 0.0\nday 1\n[121406.]\n[121407.]\n[121408.]\n[121409.]\n[121410.]\n[121411.]\n[121412.]\n[121501.]\n[121502.]\naggregated LastVol 0.0\nday 2\n[121406.]\n[121407.]\n[121408.]\n[121409.]\n[121410.]\n[121411.]\n[121412.]\n[121501.]\n[121503.]\naggregated LastVol 0.0\nday 3\n[121406.]\n[121407.]\n[121408.]\n[121409.]\n[121410.]\n[121411.]\n[121412.]\n[121501.]\n[121505.]\naggregated LastVol 0.0\nday 4\n[121406.]\n[121407.]\n[121408.]\n[121409.]\n[121410.]\n[121411.]\n[121412.]\n[121501.]\n[121503.]\naggregated LastVol 0.0\nday 5\n         PartitionDay         RecvTime      ExchTime  ContractId      Bid  \\\n1579491      20140520  09:00:00.445222  6.353623e+17      151406  4127.00   \n1579492      20140520  09:00:00.445453  6.353623e+17      151407  4107.00   \n1579493      20140520  09:00:00.447258  6.353623e+17      151409  4098.00   \n1579494      20140520  09:00:00.449690  6.353623e+17      151410  4099.00   \n1579495      20140520  09:00:00.449882  6.353623e+17      151412  4107.00   \n1579496      20140520  09:00:00.449997  6.353623e+17      151501  4107.00   \n1579497      20140520  09:00:00.450086  6.353623e+17      151502  4114.00   \n1579498      20140520  09:00:00.450189  6.353623e+17      151504  4117.00   \n1579499      20140520  09:00:00.450278  6.353623e+17      151505  4118.00   \n1579500      20140520  09:00:00.450445  6.353623e+17      161410   260.90   \n1579501      20140520  09:00:00.450547  6.353623e+17      161412   260.90   \n1579502      20140520  09:00:00.450637  6.353623e+17      161502   260.90   \n1579503      20140520  09:00:00.450739  6.353623e+17      161504   259.30   \n1579504      20140520  09:00:00.940787  6.353623e+17      151406  4127.00   \n1579505      20140520  09:00:00.941069  6.353623e+17      151407  4107.00   \n1579506      20140520  09:00:00.943194  6.353623e+17      151409  4098.00   \n1579507      20140520  09:00:00.945946  6.353623e+17      151410  4099.00   \n1579508      20140520  09:00:00.946061  6.353623e+17      151412  4107.00   \n1579509      20140520  09:00:00.946163  6.353623e+17      151501  4107.00   \n1579510      20140520  09:00:00.946266  6.353623e+17      151502  4114.00   \n1579511      20140520  09:00:00.946355  6.353623e+17      151504  4117.00   \n1579512      20140520  09:00:00.946573  6.353623e+17      151505  4119.00   \n1579513      20140520  09:00:00.946662  6.353623e+17      161410   260.90   \n1579514      20140520  09:00:00.946765  6.353623e+17      161502   260.90   \n1579515      20140520  09:00:00.946854  6.353623e+17      161504   259.35   \n1579516      20140520  09:00:01.435136  6.353623e+17      151406  4127.00   \n1579517      20140520  09:00:01.435341  6.353623e+17      151407  4107.00   \n1579518      20140520  09:00:01.435520  6.353623e+17      151409  4098.00   \n1579519      20140520  09:00:01.441357  6.353623e+17      151412  4107.00   \n1579520      20140520  09:00:01.441677  6.353623e+17      151502  4114.00   \n...               ...              ...           ...         ...      ...   \n1517771      20140523  10:29:38.690342  6.353667e+17      151406  4138.00   \n1517772      20140523  10:29:38.690611  6.353667e+17      151412  4117.00   \n1517773      20140523  10:29:38.690739  6.353667e+17      161412   260.55   \n1517774      20140523  10:29:39.203776  6.353667e+17      151406  4138.00   \n1517775      20140523  10:29:39.204378  6.353667e+17      151408  4080.00   \n1517776      20140523  10:29:39.204493  6.353667e+17      151409  4104.00   \n1517777      20140523  10:29:39.210701  6.353667e+17      151412  4117.00   \n1517778      20140523  10:29:39.210906  6.353667e+17      161406   259.40   \n1517779      20140523  10:29:39.211008  6.353667e+17      161407   258.00   \n1517780      20140523  10:29:39.216410  6.353667e+17      161412   260.55   \n1517781      20140523  10:29:39.700621  6.353667e+17      161412   260.55   \n1517782      20140523  10:29:40.200282  6.353667e+17      151412  4117.00   \n1517783      20140523  10:29:40.200755  6.353667e+17      161412   260.55   \n1517784      20140523  10:29:40.704858  6.353667e+17      151412  4117.00   \n1517785      20140523  10:29:40.705062  6.353667e+17      161412   260.50   \n1517786      20140523  10:29:41.204467  6.353667e+17      151406  4138.00   \n1517787      20140523  10:29:41.204685  6.353667e+17      151407  4110.00   \n1517788      20140523  10:29:41.204800  6.353667e+17      151408  4080.00   \n1517789      20140523  10:29:41.207488  6.353667e+17      151409  4104.00   \n1517790      20140523  10:29:41.207718  6.353667e+17      151410  4115.00   \n1517791      20140523  10:29:41.207834  6.353667e+17      151411  3912.00   \n1517792      20140523  10:29:41.207974  6.353667e+17      151412  4117.00   \n1517793      20140523  10:29:41.208128  6.353667e+17      151501  4118.00   \n1517794      20140523  10:29:41.208230  6.353667e+17      151502  4090.00   \n1517795      20140523  10:29:41.208320  6.353667e+17      151503  4108.00   \n1517796      20140523  10:29:41.208410  6.353667e+17      151504  4080.00   \n1517797      20140523  10:29:41.208512  6.353667e+17      151505  4090.00   \n1517798      20140523  10:29:41.208678  6.353667e+17      161406   259.40   \n1517799      20140523  10:29:41.208781  6.353667e+17      161407   258.00   \n1517800      20140523  10:29:41.213389  6.353667e+17      161412   260.50   \n\n             Ask     Last  BidVol  AskVol  LastVol  \\\n1579491  4128.00  4127.00      96     339        0   \n1579492  4115.00  4120.00      15       8        0   \n1579493  4101.00  4104.00       3       1        0   \n1579494  4109.00  4112.00       5      20        0   \n1579495  4108.00  4107.00     109     618        2   \n1579496  4115.00  4119.00      13      24        0   \n1579497  4125.00  4117.00       1       1        0   \n1579498  4125.00  4111.00      14       6        0   \n1579499  4145.00  4136.00       1       9        0   \n1579500   263.00   260.10       2       2        0   \n1579501   260.95   260.95      23      29        0   \n1579502   262.00   261.45       1       1        0   \n1579503   261.70   261.50       1       1        0   \n1579504  4128.00  4127.00      96     309        0   \n1579505  4115.00  4120.00      21       4        0   \n1579506  4101.00  4104.00       4       1        0   \n1579507  4109.00  4112.00       8      16        0   \n1579508  4108.00  4107.00     109     634        0   \n1579509  4115.00  4119.00      13       4        0   \n1579510  4124.00  4117.00       1      16        0   \n1579511  4125.00  4111.00      14       1        0   \n1579512  4145.00  4136.00       3       9        0   \n1579513   262.95   260.10       2       2        0   \n1579514   261.95   261.45       1       4        0   \n1579515   261.70   261.50       3       1        0   \n1579516  4128.00  4127.00      96     309        0   \n1579517  4115.00  4120.00      23       4        0   \n1579518  4101.00  4104.00       6       1        0   \n1579519  4108.00  4107.00      99     615        0   \n1579520  4123.00  4117.00       1       1        0   \n...          ...      ...     ...     ...      ...   \n1517771  4140.00  4139.00      75       8        0   \n1517772  4118.00  4117.00     191      55        0   \n1517773   260.65   260.60       4       7        0   \n1517774  4140.00  4139.00      75       8        0   \n1517775  4160.00  4128.00       1       1        0   \n1517776  4116.00  4112.00       1      11        0   \n1517777  4118.00  4117.00     191      55        0   \n1517778   259.55   259.35       1       1        0   \n1517779   266.35   259.70       5       1        0   \n1517780   260.65   260.65       4       4        6   \n1517781   260.65   260.65       4       3        2   \n1517782  4118.00  4117.00     186      55        0   \n1517783   260.65   260.65       4       3        0   \n1517784  4118.00  4117.00     186      55        0   \n1517785   260.65   260.65       5       3        0   \n1517786  4140.00  4139.00      75       8        0   \n1517787  4136.00  4120.00       1       1        0   \n1517788  4160.00  4128.00       1       1        0   \n1517789  4116.00  4112.00       1      11        0   \n1517790  4123.00  4115.00       1       1        0   \n1517791  4120.00  4120.00       6       1        0   \n1517792  4118.00  4117.00     186      55        0   \n1517793  4200.00  4121.00       1       5        0   \n1517794  4180.00  4127.00       1       1        0   \n1517795  4146.00  4137.00       1       1        0   \n1517796  4160.00  4132.00       2       1        0   \n1517797  4148.00  4146.00       1       1        0   \n1517798   259.55   259.35       1       1        0   \n1517799   266.35   259.70       5       1        0   \n1517800   260.65   260.65       5       3        0   \n\n                         date_phase  datetimephase  \n1579491  2014-09-10 09:00:00.445222              1  \n1579492  2014-09-10 09:00:00.445453              1  \n1579493  2014-09-10 09:00:00.447258              1  \n1579494  2014-09-10 09:00:00.449690              1  \n1579495  2014-09-10 09:00:00.449882              1  \n1579496  2014-09-10 09:00:00.449997              1  \n1579497  2014-09-10 09:00:00.450086              1  \n1579498  2014-09-10 09:00:00.450189              1  \n1579499  2014-09-10 09:00:00.450278              1  \n1579500  2014-09-10 09:00:00.450445              1  \n1579501  2014-09-10 09:00:00.450547              1  \n1579502  2014-09-10 09:00:00.450637              1  \n1579503  2014-09-10 09:00:00.450739              1  \n1579504  2014-09-10 09:00:00.940787              1  \n1579505  2014-09-10 09:00:00.941069              1  \n1579506  2014-09-10 09:00:00.943194              1  \n1579507  2014-09-10 09:00:00.945946              1  \n1579508  2014-09-10 09:00:00.946061              1  \n1579509  2014-09-10 09:00:00.946163              1  \n1579510  2014-09-10 09:00:00.946266              1  \n1579511  2014-09-10 09:00:00.946355              1  \n1579512  2014-09-10 09:00:00.946573              1  \n1579513  2014-09-10 09:00:00.946662              1  \n1579514  2014-09-10 09:00:00.946765              1  \n1579515  2014-09-10 09:00:00.946854              1  \n1579516  2014-09-10 09:00:01.435136              1  \n1579517  2014-09-10 09:00:01.435341              1  \n1579518  2014-09-10 09:00:01.435520              1  \n1579519  2014-09-10 09:00:01.441357              1  \n1579520  2014-09-10 09:00:01.441677              1  \n...                             ...            ...  \n1517771  2014-09-13 10:29:38.690342              1  \n1517772  2014-09-13 10:29:38.690611              1  \n1517773  2014-09-13 10:29:38.690739              1  \n1517774  2014-09-13 10:29:39.203776              1  \n1517775  2014-09-13 10:29:39.204378              1  \n1517776  2014-09-13 10:29:39.204493              1  \n1517777  2014-09-13 10:29:39.210701              1  \n1517778  2014-09-13 10:29:39.210906              1  \n1517779  2014-09-13 10:29:39.211008              1  \n1517780  2014-09-13 10:29:39.216410              1  \n1517781  2014-09-13 10:29:39.700621              1  \n1517782  2014-09-13 10:29:40.200282              1  \n1517783  2014-09-13 10:29:40.200755              1  \n1517784  2014-09-13 10:29:40.704858              1  \n1517785  2014-09-13 10:29:40.705062              1  \n1517786  2014-09-13 10:29:41.204467              1  \n1517787  2014-09-13 10:29:41.204685              1  \n1517788  2014-09-13 10:29:41.204800              1  \n1517789  2014-09-13 10:29:41.207488              1  \n1517790  2014-09-13 10:29:41.207718              1  \n1517791  2014-09-13 10:29:41.207834              1  \n1517792  2014-09-13 10:29:41.207974              1  \n1517793  2014-09-13 10:29:41.208128              1  \n1517794  2014-09-13 10:29:41.208230              1  \n1517795  2014-09-13 10:29:41.208320              1  \n1517796  2014-09-13 10:29:41.208410              1  \n1517797  2014-09-13 10:29:41.208512              1  \n1517798  2014-09-13 10:29:41.208678              1  \n1517799  2014-09-13 10:29:41.208781              1  \n1517800  2014-09-13 10:29:41.213389              1  \n\n[84421 rows x 12 columns]\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md_one = md_1.copy()</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Contractlist = pd.read_csv(<span class=\"string\">'Contractlist.csv'</span>)</span><br><span class=\"line\">Count = md[<span class=\"string\">'ContractId'</span>].value_counts()</span><br><span class=\"line\">Count = Count[Count &gt; <span class=\"number\">10</span> ]</span><br><span class=\"line\">Count1 = Count[Count.index.isin(Contractlist.ContractId)]</span><br><span class=\"line\">md = md[md[<span class=\"string\">'ContractId'</span>].isin(Count1.index)]</span><br><span class=\"line\">md1406 = md[md[<span class=\"string\">'ContractId'</span>] == <span class=\"number\">1406</span>]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">index = md1406[<span class=\"string\">'date_phase'</span>]</span><br><span class=\"line\">md1406.set_index(index, inplace= <span class=\"keyword\">True</span>)</span><br><span class=\"line\">md1406.index.set_names([<span class=\"string\">'datetime'</span>], inplace=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">fig,ax=plt.subplots(figsize=(<span class=\"number\">10</span>,<span class=\"number\">7</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">md1406[<span class=\"string\">\"Last\"</span>].plot()</span><br><span class=\"line\">ax.set_title(<span class=\"string\">'LastPrice'</span>)</span><br><span class=\"line\">ax.legend(loc=<span class=\"string\">\"center left\"</span>, bbox_to_anchor=(<span class=\"number\">1.0</span>, <span class=\"number\">0.5</span>), numpoints=<span class=\"number\">1</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<div class=\"article-img\"><p><img src=\"/2020/07/06/Assiginment/output_3_0.png\" alt=\"png\"></p></div>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md1406[<span class=\"string\">\"mid_price\"</span>] = (md1406[<span class=\"string\">'Bid'</span>] + md1406[<span class=\"string\">'Ask'</span>]) / <span class=\"number\">2</span></span><br><span class=\"line\">md1406[<span class=\"string\">\"dmid_price\"</span>] = md1406[<span class=\"string\">\"mid_price\"</span>].diff().fillna(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>D:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n  &quot;&quot;&quot;Entry point for launching an IPython kernel.\nD:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n</code></pre><p>​    </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = <span class=\"number\">120</span></span><br><span class=\"line\"><span class=\"comment\">#找到最大值</span></span><br><span class=\"line\">md1406[<span class=\"string\">\"mid_price_roll_max\"</span>] = md1406[<span class=\"string\">\"mid_price\"</span>].rolling(i).max()</span><br><span class=\"line\">md1406[<span class=\"string\">\"mid_price_roll_min\"</span>] = md1406[<span class=\"string\">\"mid_price\"</span>].rolling(i).min()</span><br><span class=\"line\"><span class=\"comment\"># 最大值前移，减去当前值，就是以后的上升值</span></span><br><span class=\"line\">md1406[<span class=\"string\">\"mid_price_diff_max\"</span>] = md1406[<span class=\"string\">\"mid_price_roll_max\"</span>].shift(-i) - md1406[<span class=\"string\">\"mid_price\"</span>]</span><br><span class=\"line\">md1406[<span class=\"string\">\"mid_price_diff_min\"</span>] = md1406[<span class=\"string\">\"mid_price_roll_min\"</span>].shift(-i) - md1406[<span class=\"string\">\"mid_price\"</span>]</span><br><span class=\"line\"><span class=\"comment\"># 取出本段数据的极值</span></span><br><span class=\"line\">max_value = md1406[<span class=\"string\">\"mid_price_diff_max\"</span>].max()</span><br><span class=\"line\">min_value = md1406[<span class=\"string\">\"mid_price_diff_min\"</span>].min()</span><br><span class=\"line\">print(<span class=\"string\">\"mid_price_diff_max\"</span> + str(i) + <span class=\"string\">\" :\"</span>, max_value , min_value)</span><br><span class=\"line\"><span class=\"comment\"># 找到最值的发生位置</span></span><br><span class=\"line\">find_max_index = np.where(md1406[<span class=\"string\">\"mid_price_diff_max\"</span>].values == max_value)</span><br><span class=\"line\">find_min_index = np.where(md1406[<span class=\"string\">\"mid_price_diff_min\"</span>].values == min_value)</span><br><span class=\"line\"></span><br><span class=\"line\">print(md1406.iloc[find_max_index][[<span class=\"string\">\"mid_price\"</span>,<span class=\"string\">\"mid_price_diff_max\"</span>,<span class=\"string\">\"mid_price_diff_min\"</span>] ] )</span><br><span class=\"line\">print(md1406.iloc[find_min_index][[<span class=\"string\">\"mid_price\"</span>,<span class=\"string\">\"mid_price_diff_max\"</span>,<span class=\"string\">\"mid_price_diff_min\"</span>] ] )</span><br></pre></td></tr></table></figure>\n<pre><code>mid_price_diff_max120 : 19.800000000000182 -14.899999999999636\n                            mid_price  mid_price_diff_max  mid_price_diff_min\ndatetime                                                                     \n2014-09-08 21:47:03.952704     2097.5                19.8                 0.0\n2014-09-08 21:47:04.376998     2097.5                19.8                 0.0\n2014-09-08 21:47:04.888602     2097.5                19.8                 0.0\n2014-09-08 21:47:05.405107     2097.5                19.8                 0.0\n2014-09-08 21:47:05.977293     2097.5                19.8                 0.0\n2014-09-08 21:47:06.424000     2097.5                19.8                 0.0\n2014-09-08 21:47:07.405299     2097.5                19.8                 0.0\n2014-09-08 21:47:07.912397     2097.5                19.8                 0.0\n2014-09-08 21:47:08.417511     2097.5                19.8                 0.0\n2014-09-08 21:47:08.990093     2097.5                19.8                 0.0\n2014-09-08 21:47:13.406003     2097.5                19.8                 0.1\n                            mid_price  mid_price_diff_max  mid_price_diff_min\ndatetime                                                                     \n2014-09-08 17:15:17.874893     2128.4                -0.1               -14.9\n\n\nD:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:3: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n  This is separate from the ipykernel package so we can avoid doing imports until\nD:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:4: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n  after removing the cwd from sys.path.\nD:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:6: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n\nD:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:7: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n  import sys\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(find_max_index[<span class=\"number\">0</span>])</span><br><span class=\"line\">find_max_index_end = find_max_index[<span class=\"number\">0</span>] + i</span><br><span class=\"line\">print(find_max_index_end)</span><br></pre></td></tr></table></figure>\n<pre><code>[21856 21857 21858 21859 21860 21861 21863 21864 21865 21866 21875]\n[21976 21977 21978 21979 21980 21981 21983 21984 21985 21986 21995]\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index = md[<span class=\"string\">'date_phase'</span>]</span><br><span class=\"line\">md.set_index(index, inplace= <span class=\"keyword\">True</span>)</span><br><span class=\"line\">md_15142 = md [md[<span class=\"string\">'ContractId'</span>] == <span class=\"number\">151412</span>]</span><br><span class=\"line\">print(md_15142)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ranges = list(np.array(range(<span class=\"number\">60</span>*<span class=\"number\">2</span>, <span class=\"number\">60</span>*<span class=\"number\">2</span>*<span class=\"number\">20</span>, <span class=\"number\">120</span>)))</span><br><span class=\"line\">columns_def = [<span class=\"string\">'datetime'</span>,</span><br><span class=\"line\">               <span class=\"string\">'tick_numbersStr'</span>, <span class=\"string\">'tick_numbers'</span>,</span><br><span class=\"line\">               <span class=\"string\">'wait_tick_numbersStr'</span>, <span class=\"string\">'wait_tick_numbers'</span>,</span><br><span class=\"line\">               <span class=\"string\">'max_valueStr'</span>, <span class=\"string\">'max_value'</span>,</span><br><span class=\"line\">               <span class=\"string\">'goon_upStr'</span>, <span class=\"string\">'goon_up'</span>,</span><br><span class=\"line\">               <span class=\"string\">'reverse_downStr'</span>, <span class=\"string\">'reverse_down'</span>]</span><br><span class=\"line\">max_tick = pd.DataFrame(columns = columns_def) </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">cal_max_direction_and_reverse</span><span class=\"params\">(df_one,idx, next_reverse_tick_number)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> max_tick</span><br><span class=\"line\">    df_one[<span class=\"string\">\"mid_price\"</span>] = (df_one[<span class=\"string\">'Bid'</span>] + df_one[<span class=\"string\">'Ask'</span>]) / <span class=\"number\">2</span></span><br><span class=\"line\">    df_one[<span class=\"string\">\"dmid_price\"</span>] = df_one[<span class=\"string\">\"mid_price\"</span>].diff().fillna(<span class=\"number\">0</span>)</span><br><span class=\"line\">    i = <span class=\"number\">120</span></span><br><span class=\"line\">    <span class=\"comment\">#找到最大值</span></span><br><span class=\"line\">    df_one[<span class=\"string\">\"mid_price_roll_max\"</span>] = df_one[<span class=\"string\">\"mid_price\"</span>].rolling(i).max()</span><br><span class=\"line\">    df_one[<span class=\"string\">\"mid_price_roll_min\"</span>] = df_one[<span class=\"string\">\"mid_price\"</span>].rolling(i).min()</span><br><span class=\"line\">    <span class=\"comment\"># 最大值前移，减去当前值，就是以后的上升值</span></span><br><span class=\"line\">    df_one[<span class=\"string\">\"mid_price_diff_max\"</span>] = df_one[<span class=\"string\">\"mid_price_roll_max\"</span>].shift(-i) - df_one[<span class=\"string\">\"mid_price\"</span>]</span><br><span class=\"line\">    df_one[<span class=\"string\">\"mid_price_diff_min\"</span>] = df_one[<span class=\"string\">\"mid_price_roll_min\"</span>].shift(-i) - df_one[<span class=\"string\">\"mid_price\"</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 取出本段数据的极值</span></span><br><span class=\"line\">    max_value = df_one[<span class=\"string\">\"mid_price_diff_max\"</span>].max()</span><br><span class=\"line\">    min_value = df_one[<span class=\"string\">\"mid_price_diff_min\"</span>].min()</span><br><span class=\"line\">    <span class=\"comment\"># 找到最值的发生位置</span></span><br><span class=\"line\">    find_max_index = np.where(df_one[<span class=\"string\">\"mid_price_diff_max\"</span>].values == max_value)</span><br><span class=\"line\">    <span class=\"comment\">#find_min_index = np.where(df_one[\"mid_price_diff_min\"].values == min_value)</span></span><br><span class=\"line\">    i = int(idx)</span><br><span class=\"line\">    find_max_index = np.where(df_one[<span class=\"string\">\"mid_price_diff_max\"</span>].values == max_value)</span><br><span class=\"line\">    touched_index = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> start_idx <span class=\"keyword\">in</span> find_max_index[<span class=\"number\">0</span>]:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> start_idx &lt; touched_index:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> start_idx + i + next_reverse_tick_number &lt; len(df_one):</span><br><span class=\"line\">            mid_price_reverse = df_one[start_idx + i: start_idx + i + next_reverse_tick_number][<span class=\"string\">\"mid_price\"</span>] - df_one[start_idx + i: start_idx + i + <span class=\"number\">1</span>][<span class=\"string\">\"mid_price\"</span>].values[<span class=\"number\">0</span>]</span><br><span class=\"line\">            touched_index = start_idx + next_reverse_tick_number</span><br><span class=\"line\">            print(df_one[start_idx:start_idx+<span class=\"number\">1</span>].index[<span class=\"number\">0</span>],<span class=\"string\">\",tick_numbers,\"</span>,idx,<span class=\"string\">\",wait_tick_numbers,\"</span>,next_reverse_tick_number ,<span class=\"string\">\",max_value,\"</span>, max_value,<span class=\"string\">\",goon_up,\"</span> ,mid_price_reverse.max(), <span class=\"string\">\",reverse_down,\"</span> ,mid_price_reverse.min())</span><br><span class=\"line\">            printtodf = pd.DataFrame([[df_one[start_idx:start_idx+<span class=\"number\">1</span>].index[<span class=\"number\">0</span>],<span class=\"string\">\",tick_numbers,\"</span>,idx,<span class=\"string\">\",wait_tick_numbers,\"</span>,next_reverse_tick_number,<span class=\"string\">\",max_value,\"</span>,max_value,<span class=\"string\">\",goon_up,\"</span>,mid_price_reverse.max(),<span class=\"string\">\",reverse_down,\"</span>,mid_price_reverse.min()]],columns = columns_def)</span><br><span class=\"line\">            max_tick = pd.concat([max_tick,printtodf])</span><br><span class=\"line\">    find_min_index = np.where(df_one[<span class=\"string\">\"mid_price_diff_min\"</span>].values == min_value)</span><br><span class=\"line\">    touched_index = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> start_idx <span class=\"keyword\">in</span> find_min_index[<span class=\"number\">0</span>]:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> start_idx &lt; touched_index:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> start_idx + i + next_reverse_tick_number &lt; len(df_one):</span><br><span class=\"line\">            mid_price_reverse = df_one[start_idx + i: start_idx + i + next_reverse_tick_number][<span class=\"string\">\"mid_price\"</span>] - df_one[start_idx + i: start_idx + i + <span class=\"number\">1</span>][<span class=\"string\">\"mid_price\"</span>].values[<span class=\"number\">0</span>]</span><br><span class=\"line\">            touched_index = start_idx + next_reverse_tick_number</span><br><span class=\"line\">            print(df_one[start_idx:start_idx+<span class=\"number\">1</span>].index[<span class=\"number\">0</span>],<span class=\"string\">\",tick_numbers,\"</span>,idx,<span class=\"string\">\",wait_tick_numbers,\"</span>,next_reverse_tick_number ,<span class=\"string\">\",min_value,\"</span>, min_value,<span class=\"string\">\",goon_down,\"</span> ,mid_price_reverse.min(), <span class=\"string\">\",reverse_up,\"</span> ,mid_price_reverse.max())</span><br><span class=\"line\">            printtodf = pd.DataFrame([[df_one[start_idx:start_idx+<span class=\"number\">1</span>].index[<span class=\"number\">0</span>],<span class=\"string\">\",tick_numbers,\"</span>,idx,<span class=\"string\">\",wait_tick_numbers,\"</span>,next_reverse_tick_number ,<span class=\"string\">\",min_value,\"</span>, min_value,<span class=\"string\">\",goon_down,\"</span> ,mid_price_reverse.min(), <span class=\"string\">\",reverse_up,\"</span> ,mid_price_reverse.max()]],columns = columns_def)</span><br><span class=\"line\">            max_tick = pd.concat([max_tick,printtodf])</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">next_reverse_tick_number = <span class=\"number\">60</span>*<span class=\"number\">2</span>*<span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx <span class=\"keyword\">in</span> ranges:</span><br><span class=\"line\">    i = int(idx)</span><br><span class=\"line\">    cal_max_direction_and_reverse(md1406,idx, next_reverse_tick_number)</span><br></pre></td></tr></table></figure>\n<pre><code>D:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:11: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n  # This is added back by InteractiveShellApp.init_path()\nD:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:12: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n  if sys.path[0] == &apos;&apos;:\nD:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:15: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n  from ipykernel import kernelapp as app\nD:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:16: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n  app.launch_new_instance()\nD:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:18: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\nD:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:19: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n\n\n2014-09-08 21:47:03.952704 ,tick_numbers, 120 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 1.0 ,reverse_down, -3.099999999999909\n2014-09-08 17:15:17.874893 ,tick_numbers, 120 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -0.1000000000003638 ,reverse_up, 14.299999999999272\n2014-09-08 21:47:03.952704 ,tick_numbers, 240 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 0.0999999999994543 ,reverse_down, -4.300000000000182\n2014-09-08 17:15:17.874893 ,tick_numbers, 240 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -0.599999999999909 ,reverse_up, 11.699999999999818\n2014-09-08 21:47:03.952704 ,tick_numbers, 360 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 0.0 ,reverse_down, -3.400000000000091\n2014-09-08 17:15:17.874893 ,tick_numbers, 360 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -1.1000000000003638 ,reverse_up, 8.599999999999454\n2014-09-08 21:47:03.952704 ,tick_numbers, 480 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 1.199999999999818 ,reverse_down, -2.200000000000273\n2014-09-08 17:15:17.874893 ,tick_numbers, 480 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -2.5000000000004547 ,reverse_up, 0.8999999999996362\n2014-09-08 21:47:03.952704 ,tick_numbers, 600 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 0.8000000000001819 ,reverse_down, -2.599999999999909\n2014-09-08 17:15:17.874893 ,tick_numbers, 600 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -2.099999999999909 ,reverse_up, 1.5\n2014-09-08 21:47:03.952704 ,tick_numbers, 720 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 0.5 ,reverse_down, -1.900000000000091\n2014-09-08 17:15:17.874893 ,tick_numbers, 720 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -2.599999999999909 ,reverse_up, 1.0\n2014-09-08 21:47:03.952704 ,tick_numbers, 840 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 1.5 ,reverse_down, -0.900000000000091\n2014-09-08 17:15:17.874893 ,tick_numbers, 840 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -2.400000000000091 ,reverse_up, 1.400000000000091\n2014-09-08 21:47:03.952704 ,tick_numbers, 960 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 1.800000000000182 ,reverse_down, -0.3999999999996362\n2014-09-08 17:15:17.874893 ,tick_numbers, 960 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -3.199999999999818 ,reverse_up, 0.599999999999909\n2014-09-08 21:47:03.952704 ,tick_numbers, 1080 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 1.599999999999909 ,reverse_down, -0.7999999999997272\n2014-09-08 17:15:17.874893 ,tick_numbers, 1080 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -3.699999999999818 ,reverse_up, 1.7000000000002728\n2014-09-08 21:47:03.952704 ,tick_numbers, 1200 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 0.6999999999998181 ,reverse_down, -1.699999999999818\n2014-09-08 17:15:17.874893 ,tick_numbers, 1200 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -4.800000000000182 ,reverse_up, 0.599999999999909\n2014-09-08 21:47:03.952704 ,tick_numbers, 1320 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 1.599999999999909 ,reverse_down, -0.7999999999997272\n2014-09-08 17:15:17.874893 ,tick_numbers, 1320 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -5.0 ,reverse_up, 0.1999999999998181\n2014-09-08 21:47:03.952704 ,tick_numbers, 1440 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 3.200000000000273 ,reverse_down, -1.199999999999818\n2014-09-08 17:15:17.874893 ,tick_numbers, 1440 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -3.400000000000091 ,reverse_up, 1.0\n2014-09-08 21:47:03.952704 ,tick_numbers, 1560 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 4.0 ,reverse_down, -0.1000000000003638\n2014-09-08 17:15:17.874893 ,tick_numbers, 1560 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -2.400000000000091 ,reverse_up, 1.199999999999818\n2014-09-08 21:47:03.952704 ,tick_numbers, 1680 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 2.600000000000364 ,reverse_down, -1.3999999999996362\n2014-09-08 17:15:17.874893 ,tick_numbers, 1680 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -2.0 ,reverse_up, 2.400000000000091\n2014-09-08 21:47:03.952704 ,tick_numbers, 1800 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 3.400000000000091 ,reverse_down, -0.8000000000001819\n2014-09-08 17:15:17.874893 ,tick_numbers, 1800 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -5.100000000000364 ,reverse_up, 0.599999999999909\n2014-09-08 21:47:03.952704 ,tick_numbers, 1920 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 3.0 ,reverse_down, -1.2000000000002728\n2014-09-08 17:15:17.874893 ,tick_numbers, 1920 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -7.500000000000455 ,reverse_up, 0.8999999999996362\n2014-09-08 21:47:03.952704 ,tick_numbers, 2040 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 0.8000000000001819 ,reverse_down, -2.599999999999909\n2014-09-08 17:15:17.874893 ,tick_numbers, 2040 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -7.599999999999909 ,reverse_up, 1.0\n2014-09-08 21:47:03.952704 ,tick_numbers, 2160 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 3.300000000000182 ,reverse_down, -1.2999999999997272\n2014-09-08 17:15:17.874893 ,tick_numbers, 2160 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -10.199999999999818 ,reverse_up, 0.599999999999909\n2014-09-08 21:47:03.952704 ,tick_numbers, 2280 ,wait_tick_numbers, 600 ,max_value, 19.800000000000182 ,goon_up, 4.199999999999818 ,reverse_down, -0.8000000000001819\n2014-09-08 17:15:17.874893 ,tick_numbers, 2280 ,wait_tick_numbers, 600 ,min_value, -14.899999999999636 ,goon_down, -12.400000000000091 ,reverse_up, 0.599999999999909\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(max_tick)</span><br></pre></td></tr></table></figure>\n<pre><code>                     datetime tick_numbersStr tick_numbers  \\\n0  2014-09-08 21:47:03.952704  ,tick_numbers,          120   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,          120   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,          240   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,          240   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,          360   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,          360   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,          480   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,          480   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,          600   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,          600   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,          720   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,          720   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,          840   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,          840   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,          960   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,          960   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,         1080   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,         1080   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,         1200   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,         1200   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,         1320   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,         1320   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,         1440   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,         1440   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,         1560   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,         1560   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,         1680   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,         1680   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,         1800   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,         1800   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,         1920   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,         1920   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,         2040   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,         2040   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,         2160   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,         2160   \n0  2014-09-08 21:47:03.952704  ,tick_numbers,         2280   \n0  2014-09-08 17:15:17.874893  ,tick_numbers,         2280   \n\n  wait_tick_numbersStr wait_tick_numbers max_valueStr  max_value   goon_upStr  \\\n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n0  ,wait_tick_numbers,               600  ,max_value,       19.8    ,goon_up,   \n0  ,wait_tick_numbers,               600  ,min_value,      -14.9  ,goon_down,   \n\n   goon_up reverse_downStr  reverse_down  \n0      1.0  ,reverse_down,          -3.1  \n0     -0.1    ,reverse_up,          14.3  \n0      0.1  ,reverse_down,          -4.3  \n0     -0.6    ,reverse_up,          11.7  \n0      0.0  ,reverse_down,          -3.4  \n0     -1.1    ,reverse_up,           8.6  \n0      1.2  ,reverse_down,          -2.2  \n0     -2.5    ,reverse_up,           0.9  \n0      0.8  ,reverse_down,          -2.6  \n0     -2.1    ,reverse_up,           1.5  \n0      0.5  ,reverse_down,          -1.9  \n0     -2.6    ,reverse_up,           1.0  \n0      1.5  ,reverse_down,          -0.9  \n0     -2.4    ,reverse_up,           1.4  \n0      1.8  ,reverse_down,          -0.4  \n0     -3.2    ,reverse_up,           0.6  \n0      1.6  ,reverse_down,          -0.8  \n0     -3.7    ,reverse_up,           1.7  \n0      0.7  ,reverse_down,          -1.7  \n0     -4.8    ,reverse_up,           0.6  \n0      1.6  ,reverse_down,          -0.8  \n0     -5.0    ,reverse_up,           0.2  \n0      3.2  ,reverse_down,          -1.2  \n0     -3.4    ,reverse_up,           1.0  \n0      4.0  ,reverse_down,          -0.1  \n0     -2.4    ,reverse_up,           1.2  \n0      2.6  ,reverse_down,          -1.4  \n0     -2.0    ,reverse_up,           2.4  \n0      3.4  ,reverse_down,          -0.8  \n0     -5.1    ,reverse_up,           0.6  \n0      3.0  ,reverse_down,          -1.2  \n0     -7.5    ,reverse_up,           0.9  \n0      0.8  ,reverse_down,          -2.6  \n0     -7.6    ,reverse_up,           1.0  \n0      3.3  ,reverse_down,          -1.3  \n0    -10.2    ,reverse_up,           0.6  \n0      4.2  ,reverse_down,          -0.8  \n0    -12.4    ,reverse_up,           0.6  \n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(md1406[<span class=\"string\">'mid_price_diff_max'</span>].min())<span class=\"comment\">#最大连续上升</span></span><br></pre></td></tr></table></figure>\n<pre><code>-1.599999999999909\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(md1406[<span class=\"string\">'mid_price_diff_max'</span>].max())<span class=\"comment\">#最大连续下降</span></span><br></pre></td></tr></table></figure>\n<pre><code>19.800000000000182\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(max_tick[(max_tick.max_value &gt; <span class=\"number\">10</span>) &amp; (max_tick.reverse_down &lt; <span class=\"number\">-3</span>)].count()/ max_tick[max_tick.max_value &gt; <span class=\"number\">10</span>].count())</span><br></pre></td></tr></table></figure>\n<pre><code>datetime                0.157895\ntick_numbersStr         0.157895\ntick_numbers            0.157895\nwait_tick_numbersStr    0.157895\nwait_tick_numbers       0.157895\nmax_valueStr            0.157895\nmax_value               0.157895\ngoon_upStr              0.157895\ngoon_up                 0.157895\nreverse_downStr         0.157895\nreverse_down            0.157895\ndtype: float64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(max_tick[(max_tick.max_value &gt; <span class=\"number\">10</span>) &amp; (max_tick.goon_up &gt;= <span class=\"number\">2</span>)].count()/ max_tick[max_tick.max_value &gt; <span class=\"number\">10</span>].count())</span><br></pre></td></tr></table></figure>\n<pre><code>datetime                0.368421\ntick_numbersStr         0.368421\ntick_numbers            0.368421\nwait_tick_numbersStr    0.368421\nwait_tick_numbers       0.368421\nmax_valueStr            0.368421\nmax_value               0.368421\ngoon_upStr              0.368421\ngoon_up                 0.368421\nreverse_downStr         0.368421\nreverse_down            0.368421\ndtype: float64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">up_threshold = <span class=\"number\">14</span></span><br><span class=\"line\">next_reverse_tick_number = <span class=\"number\">60</span>*<span class=\"number\">2</span>*<span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"comment\"># 2个tick price 止盈</span></span><br><span class=\"line\">TP = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\"># 5个tick price 止损</span></span><br><span class=\"line\">TL = <span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\">TR_COST =<span class=\"number\">0</span> <span class=\"comment\">#未按货币合约乘数总价值计算手续费</span></span><br><span class=\"line\">pos = <span class=\"number\">0</span></span><br><span class=\"line\">pnl = <span class=\"number\">0</span></span><br><span class=\"line\">trade_costs = <span class=\"number\">0</span></span><br><span class=\"line\">buy_price = <span class=\"number\">0</span></span><br><span class=\"line\">sell_price = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">trade_volume = <span class=\"number\">0</span></span><br><span class=\"line\">trade_records = []</span><br><span class=\"line\">total_trade_pnl = []</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">length_of_data = len(md1406)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(length_of_data):</span><br><span class=\"line\">    tc = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"comment\">#print(df_one[\"mid_price_diff_max\"][i])</span></span><br><span class=\"line\">    <span class=\"comment\"># 没有仓位，并且上升超过限制，进行开仓</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> md1406[<span class=\"string\">\"mid_price_diff_max\"</span>][i] &gt;= up_threshold <span class=\"keyword\">and</span> <span class=\"number\">0</span> == pos:</span><br><span class=\"line\">        sell_price = md1406[<span class=\"string\">\"Bid\"</span>][i] <span class=\"comment\"># 对价开仓</span></span><br><span class=\"line\">        pos = <span class=\"number\">-1</span></span><br><span class=\"line\">        trade_volume = trade_volume + <span class=\"number\">1</span></span><br><span class=\"line\">        trade_records.append((str(md1406.index[i]), <span class=\"string\">'SELL'</span>, <span class=\"number\">1</span>, sell_price, tc, <span class=\"number\">0</span>))</span><br><span class=\"line\">        print( str(md1406.index[i]), <span class=\"string\">'SELL'</span>, <span class=\"number\">1</span>, sell_price, tc, <span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> md1406[<span class=\"string\">\"mid_price_diff_max\"</span>][i] &lt;= -down_threshold <span class=\"keyword\">and</span> pos == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> pos != <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> pos == <span class=\"number\">-1</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 止盈 或者 止损</span></span><br><span class=\"line\">            buy_price =  md1406[<span class=\"string\">\"Ask\"</span>][i] <span class=\"comment\"># 对价平仓</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> buy_price &gt;= sell_price + TL <span class=\"keyword\">or</span> buy_price &lt;= sell_price - TP:</span><br><span class=\"line\">                pos = <span class=\"number\">0</span></span><br><span class=\"line\">                tc = TR_COST</span><br><span class=\"line\">                trade_costs = trade_costs + tc</span><br><span class=\"line\">                trade_pnl = (sell_price - buy_price) -  <span class=\"number\">2</span>*tc</span><br><span class=\"line\">                pnl = pnl + trade_pnl</span><br><span class=\"line\">                trade_volume = trade_volume + <span class=\"number\">1</span></span><br><span class=\"line\">                total_trade_pnl.append(trade_pnl)</span><br><span class=\"line\">                trade_records.append((str(md1406.index[i]), <span class=\"string\">'BUY'</span>, <span class=\"number\">1</span>, buy_price, tc, trade_pnl))</span><br><span class=\"line\">                print(str(md1406.index[i]), <span class=\"string\">'BUY'</span>, <span class=\"number\">1</span>, buy_price, tc, trade_pnl)</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">elif</span> pos == <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> i + next_reverse_tick_number &gt; length_of_data <span class=\"keyword\">and</span> pos != <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"comment\">#如果到最后还没平仓，强制平仓</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> pos == <span class=\"number\">-1</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 止盈 或者 止损</span></span><br><span class=\"line\">            buy_price =  md1406[<span class=\"string\">\"AskPrice1\"</span>][i]</span><br><span class=\"line\">            pos = <span class=\"number\">0</span></span><br><span class=\"line\">            tc = TR_COST</span><br><span class=\"line\">            trade_costs = trade_costs + tc</span><br><span class=\"line\">            trade_pnl = (sell_price - buy_price) -  <span class=\"number\">2</span>*tc</span><br><span class=\"line\">            pnl = pnl + trade_pnl</span><br><span class=\"line\">            trade_volume = trade_volume + <span class=\"number\">1</span></span><br><span class=\"line\">            total_trade_pnl.append(trade_pnl)</span><br><span class=\"line\">            trade_records.append((str(md1406.index[i]), <span class=\"string\">'BUY'</span>, <span class=\"number\">1</span>, buy_price, tc, trade_pnl))</span><br><span class=\"line\">            print(str(md1406.index[i]), <span class=\"string\">'BUY'</span>, <span class=\"number\">1</span>, buy_price, tc, trade_pnl)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">print(trade_volume)</span><br><span class=\"line\">print(pnl)</span><br></pre></td></tr></table></figure>\n<pre><code>2014-09-08 21:46:56.464294 SELL 1 2097.6 0 0\n2014-09-09 17:13:54.482662 BUY 1 2117.6 0 -20.0\n2014-09-10 17:45:48.672525 SELL 1 2087.2 0 0\n2014-09-10 17:45:58.536461 BUY 1 2092.4 0 -5.200000000000273\n4\n-25.200000000000273\n</code></pre>","next":{"title":"Hello World","slug":"hello-world"},"link":"http://yoursite.com/post/Assiginment/"}